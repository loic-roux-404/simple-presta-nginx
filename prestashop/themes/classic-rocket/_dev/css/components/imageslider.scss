.caroussel-wrapper {
  background: $primary;

  @include media-breakpoint-down(sm) {
    h3 {
      font-size: $font-size-base;
      margin: 0;
    }
  }


  .rc {
    height: 60%;
  }

  .slick-slide{
    height:12em;
  }

  @include media-breakpoint-up(sm) {
    background: transparent;


    .rc {
      height:0;
    }
    .slick-slide{
      height:unset;
    }
  }
}
.caroussel-wrapper {

  margin-bottom: $spacer-bloc;
  @include media-breakpoint-up(sm) {
    margin-bottom: 0;
  }
}
.carousel {
  position: relative;

  @include media-breakpoint-up(sm) {
    margin-bottom: $bg-spacer;
  }

  .slick-list, .slick-list {
    position: static;
  }

  a {
    display: block;
    z-index: 2;

    &:not(:first-child) {
      display: none;
    }
  }

  .slider-caption {
    position: absolute;
    top: 25%;
    transform: translateY(-25%);
    width: 100vw;
    margin-bottom: 0;
    color: $white;
    font-size: .7rem;
    z-index: 4;

    * {
      z-index: 4;
    }

    .display-2 {
      margin-bottom: .2em;
    }


    @media (min-width: map_get($grid-breakpoints, "lg")) {
      //top: 25%;
      //margin: auto 0;
      font-size: inherit;

      .display-2 {
        margin-bottom: inherit;
      }
    }
  }
}


.carousel {

  &::after {
    content: '';
    background: center bottom /100% no-repeat $bg-deco; //, -16% -15%/20% no-repeat linear-gradient(to left, $primary, darken($primary, 0.1));
    //background:50% 0/cover no-repeat;
    width: 110%;
    height: 50%;
    position: absolute;
    left: -1em;
    display: none;

    /////- width
    @media (min-width: map_get($grid-breakpoints, "sm")) {
      bottom: -12%;
      transform: translateY(9%);
      display: block;
    }

    @media (min-width: 1500px) {
      bottom: -5%;
      transform: translateY(5%);
    }
  }
}



//animate
$sep: 25%;
$m: 100%;

//timings
$d: .68s;
$t: .5s;
#index .slick-slide {

  .effect-ab, .rc::before, .rc::after {
    @include effect-ab($sep, $slider-bg, true)
  }

  //backgrounds
  .rc::before {
    left: 0;
    transform: translateY($m);
  }

  .rc::after {
    left: $sep;
    transform: translateY(-$m);
  }

  //toggle animations
  &.slick-current {
    .rc::after, &.slick-current .rc::before {
      transform: translateY(0);
    }

    .rc::after {
      animation: shdw $t $d $bezier3 forwards;
    }
  }
}


//text
.enter-text-anime {
  animation: enter-txt $t $d $bezier forwards;
}

.exit-text-anime {
  animation: exit-txt $t $d $bezier forwards;
}

$k: 0.35;
$Y: 10em;


@each $el, $i in $toAnim {

  .slick-slide #{unquote($el)} {
    transition: opacity 2s;
    opacity: 0;
    @include tsY($Y);
  }

  .slick-current #{unquote($el)} {
    animation: enter-txt $t $k+unquote("s") $bezier forwards;
  }


  .slick-slide:not(.slick-current) {

    #{unquote($el)} {
      animation: exit-txt $t $k+unquote("s") $bezier forwards;
    }
  }

  $k: $k+0.2;
}

@keyframes shdw {
  to {
    box-shadow: 90px 3px 80px 70px $slider-bg;
  }
}

@keyframes enter-txt {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes exit-txt {
  to {
    opacity: 0;
    @include tsY($Y);
  }
}


//displays settings
.slick-slide:not(.slick-current) .img-carousel.lazyload {
  display: none !important;
}

.slick-slide figure {
  position: absolute;
  top: 0;
}

//buttons design
.modal .slick-slider {
  .slick-arrow > i {
    background: transparent;
    border-width: $border-size-lg;
    border-color: $body-color;
    border-style: solid;
    border-radius: 0;
    transition: .35s $bezier2;
  }

  .slick-arrow:hover i {
    border-color: $gray-800;
  }
}

.carousel.slick__arrow-large .slick-arrow > i {
  font-size: 2rem;
  text-shadow: unset;
}

